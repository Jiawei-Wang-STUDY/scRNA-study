##系统报错改为英文
Sys.setenv(LANGUAGE = "en")
##禁止转化为因子
options(stringsAsFactors = FALSE)
##清空环境
rm(list=ls())

library(dplyr)
library(Seurat)
library(patchwork)
library(reshape2)
library(RColorBrewer)
library(ggplot2)
library(ggrepel)  
library(magrittr)
library(data.table)
library(tidyverse)

setwd("E:\\super.lesson\\s8/")
load("anno.scRNA_harmony.rdata")

scRNA_harmony@meta.data[which(scRNA_harmony@meta.data$orig.ident=="s1"),"group.3"]="c"
scRNA_harmony@meta.data[which(scRNA_harmony@meta.data$orig.ident=="s2"),"group.3"]="c"
scRNA_harmony@meta.data[which(scRNA_harmony@meta.data$orig.ident=="s3"),"group.3"]="t"
scRNA_harmony@meta.data[which(scRNA_harmony@meta.data$orig.ident=="s4"),"group.3"]="t"
DimPlot(scRNA_harmony,split.by = "group.3",group.by = "celltype.3")

setwd("E:\\super.lesson\\s10/")

deg=FindMarkers(scRNA_harmony,subset.ident = "Tcells",ident.1 = "t",ident.2 = "c",
                group.by = "group.3", min.pct = 0.25 )



##BiocManager::install("org.Mm.eg.db")
library(org.Hs.eg.db)
library(clusterProfiler)
degs.list=rownames(deg)
erich.go.BP = enrichGO(gene =degs.list,
                       OrgDb = org.Hs.eg.db,
                       keyType = "SYMBOL",
                       ont = "BP",
                       pvalueCutoff = 0.05,
                       qvalueCutoff = 0.05)
dotplot(erich.go.BP,showCategory = 15)



categorys <- c("cytoplasmic translation", "viral process",
               "protein folding")
dotplot(erich.go.BP, showCategory = categorys)

?dotplot
barplot(erich.go.BP,showCategory = 8)
erich.go.BP=erich.go.BP@result
write.table(erich.go.BP,"erich.go.BP.deg.con.hf.txt",sep = "\t",col.names = NA)

erich.go.CC = enrichGO(gene =degs.list,
                       OrgDb = org.Hs.eg.db,
                       keyType = "SYMBOL",
                       ont = "CC",
                       pvalueCutoff = 0.5,
                       qvalueCutoff = 0.5)
dotplot(erich.go.CC,showCategory = 8)
?dotplot
barplot(erich.go.CC,showCategory = 8)

erich.go.MF = enrichGO(gene =degs.list,
                       OrgDb = org.Hs.eg.db,
                       keyType = "SYMBOL",
                       ont = "MF",
                       pvalueCutoff = 0.5,
                       qvalueCutoff = 0.5)
dotplot(erich.go.MF,showCategory = 8)
?dotplot
barplot(erich.go.MF,showCategory = 8)


keytypes(org.Hs.eg.db)

DEG.entrez_id = mapIds(x = org.Hs.eg.db,
                       keys =  degs.list,
                       keytype = "SYMBOL",
                       column = "ENTREZID")

?enrichKEGG
erich.kegg.res <- enrichKEGG(gene = DEG.entrez_id,
                             organism = "hsa",
                             keyType = "kegg")

dotplot(erich.kegg.res)
zzh=erich.kegg.res@result
write.table(zzh,"erich.kegg.res.txt",sep = "\t",col.names = NA)



library(msigdbr)
msigdbr::msigdbr_species()
msigdbr::msigdbr_collections()
m_df<- msigdbr(species = "Homo sapiens",  category = "H" )
m_df = m_df[,c(9,4)]
erich.kegg.msi=enricher(degs.list,TERM2GENE =m_df )
dotplot(erich.kegg.msi,showCategory = 8)

write.table(erich.kegg.msi@result,"erich.kegg.res.txt",sep = "\t",col.names = NA)


kegg=read.table("11.16.res.txt",header = T,sep = "\t")
View(kegg)

k = data.frame(kegg)
library(ggplot2)
library(dplyr)
before <- as.numeric(sub("/\\d+$", "", k$GeneRatio))
after <- as.numeric(sub("^\\d+/", "", k$GeneRatio))
k$GeneRatio = before /after
font.size =10

k %>% 
  ## 对进行p值排序
  arrange(p.adjust) %>% 
  ##指定富集的通路数目
  slice(1:10) %>% 
  ## 开始ggplot2 作图，其中fct_reorder调整因子level的顺序
  ggplot(aes(GeneRatio,forcats::fct_reorder(Description,Count)))+ 
  ## 画出点图
  geom_point(aes(color=p.adjust, size = Count)) +
  ## 调整颜色，guide_colorbar调整色图的方向
  scale_color_continuous(low="red", high="blue", guide=guide_colorbar(reverse=TRUE))+
  ## 调整泡泡的大小
  scale_size_continuous(range=c(3, 8))+
  ## 如果用ylab("")或出现左侧空白
  labs(y=NULL) +
  ## 如果没有这一句，上方会到顶
  ggtitle("")+
  ## 设定主题
  theme_bw() +
  theme(axis.text.x = element_text(colour = "black",
                                   size = font.size, vjust =1 ),
        axis.text.y = element_text(colour = "black",
                                   size = font.size, hjust =1 ),
        axis.title = element_text(margin=margin(10, 5, 0, 0),
                                  color = "black",size = font.size),
        axis.title.y = element_text(angle=90))

###################################################################################
erich.go.BP=erich.go.BP@result

colnames(erich.go.BP)
###install.packages("GOplot")
library(GOplot)


go1=erich.go.BP[1:3,c(1,2,8,11)]
rownames(go1)=go1$ID
go=go1
###install.packages("stringr")
library(stringr)
go$geneID=str_replace_all(go$geneID,"/",",")
names(go)=c('ID','Term','adj_pval','Genes')
go$Category="BP"
go$Category<-'BP'


x1=strsplit(go$Genes[1],split=",",fixed=T)
x2=strsplit(go$Genes[2],split=",",fixed=T)
x3=strsplit(go$Genes[3],split=",",fixed=T)
g1=c(x1[[1]],x2[[1]],x3[[1]])
genedata1=deg[g1,]   
genedata1$ID=rownames(genedata1)
genedata2=data.frame(ID=genedata1$ID,logFC=genedata1$avg_log2FC)

circ <- circle_dat(go,genedata2)

GOBar(subset(circ, category == 'BP'))

GOCircle(circ, nsub = 3)

chord<-chord_dat(circ, genedata2)
GOChord(chord, gene.order = 'logFC')
